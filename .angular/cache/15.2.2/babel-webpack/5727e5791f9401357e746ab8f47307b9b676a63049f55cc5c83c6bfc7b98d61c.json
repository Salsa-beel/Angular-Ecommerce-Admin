{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet CartComponent = class CartComponent {\n  constructor(service) {\n    this.service = service;\n    this.cartProducts = [];\n    this.total = 0;\n    this.success = false;\n  }\n  ngOnInit() {\n    this.getCartProducts();\n  }\n  getCartProducts() {\n    if (\"cart\" in localStorage) {\n      this.cartProducts = JSON.parse(localStorage.getItem(\"cart\"));\n    }\n    this.getCartTotal();\n  }\n  addAmount(index) {\n    this.cartProducts[index].quantity++;\n    this.getCartTotal();\n    localStorage.setItem(\"cart\", JSON.stringify(this.cartProducts));\n  }\n  minsAmount(index) {\n    this.cartProducts[index].quantity--;\n    this.getCartTotal();\n    localStorage.setItem(\"cart\", JSON.stringify(this.cartProducts));\n  }\n  detectChange() {\n    this.getCartTotal(); // update el total price el gdid\n    localStorage.setItem(\"cart\", JSON.stringify(this.cartProducts));\n  }\n  deleteProduct(index) {\n    this.getCartTotal(); // bandah el method bta3t get total\n    this.cartProducts.splice(index, 1);\n    localStorage.setItem(\"cart\", JSON.stringify(this.cartProducts));\n  }\n  getCartTotal() {\n    this.total = 0;\n    for (let x in this.cartProducts) {\n      this.total += this.cartProducts[x].item.price * this.cartProducts[x].quantity;\n    }\n  }\n  clearCart() {\n    this.cartProducts = [];\n    this.getCartTotal(); // update el total price el gdid\n    localStorage.setItem(\"cart\", JSON.stringify(this.cartProducts));\n  }\n  addCart() {\n    let products = this.cartProducts.map(item =>\n    // map hat3mel array gdid\n    {\n      return {\n        productId: item.item.id,\n        quantity: item.quantity\n      };\n    });\n    let Model = {\n      userId: 5,\n      date: new Date(),\n      products: []\n    };\n    this.service.createNewCart(Model).subscribe(res => {\n      this.success = true;\n    });\n    console.log(Model);\n  }\n};\nCartComponent = __decorate([Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css']\n})], CartComponent);\nexport { CartComponent };","map":{"version":3,"mappings":"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","names":["Component","CartComponent","constructor","service","ngOnInit","getCartProducts","localStorage","cartProducts","JSON","parse","getItem","getCartTotal","addAmount","index","quantity","setItem","stringify","minsAmount","detectChange","deleteProduct","splice","total","x","item","price","clearCart","addCart","products","map","productId","id","Model","userId","date","Date","createNewCart","subscribe","res","success","console","log","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/salsabeel/Desktop/Angular-Ecommerce-Admin/src/app/Components/cart/cart.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CartService } from 'src/app/service/cart.service';\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css']\n})\nexport class CartComponent implements OnInit {\n\n\n\n  constructor( private service : CartService) { }\n\n  cartProducts:any[]= [];\n  total:number=0;\n  success: boolean = false\n\n\n  ngOnInit() : void {\n\n    this.getCartProducts()\n\n  }\n\n  getCartProducts(){\n\n    if (\"cart\" in localStorage){\n      this.cartProducts = JSON.parse(localStorage.getItem(\"cart\")!)\n  }\n\n  this. getCartTotal()\n  }\n\n\n\n  addAmount (index:number){\n    this.cartProducts[index].quantity++\n    this. getCartTotal()\n    localStorage.setItem(\"cart\", JSON.stringify(this.cartProducts))\n\n  }\n  minsAmount (index:number){\n    this.cartProducts[index].quantity--\n    this. getCartTotal()\n    localStorage.setItem(\"cart\", JSON.stringify(this.cartProducts))\n\n  }\n\n  detectChange(){\n    this. getCartTotal() // update el total price el gdid\n    localStorage.setItem(\"cart\", JSON.stringify(this.cartProducts))\n  }\n\n\n  deleteProduct(index:number){\n    this. getCartTotal() // bandah el method bta3t get total\n\n    this.cartProducts.splice(index,1)\n    localStorage.setItem(\"cart\", JSON.stringify(this.cartProducts))\n\n  }\n\n  getCartTotal(){\n    this.total=0\n    for(let x in this.cartProducts){\n      this.total += this.cartProducts[x].item.price * this.cartProducts[x].quantity\n    }\n  }\n\n  clearCart(){\n    this.cartProducts =[]\n    this. getCartTotal() // update el total price el gdid\n    localStorage.setItem(\"cart\", JSON.stringify(this.cartProducts))\n\n  }\n\n  addCart() {\n\n    let products = this.cartProducts.map( item => // map hat3mel array gdid\n      {\n       return {productId:item.item.id , quantity:item.quantity}\n\n      })\n      let Model = {\n        userId:5,\n        date : new Date(),\n        products:[]\n      }\n\n      this.service.createNewCart(Model).subscribe(res => {\n        this.success = true\n      })\n      console.log(Model)\n  }\n\n\n  // removeItem(item:any) {\n  //   this.cartService.removeCartItem(item);\n  // }\n\n  // emptyCart() {\n  //   this.cartService.removeAllCart();\n  // }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}